/*
栈，首先是一个线性表，也就是说，栈元素具有线性关系，
即前驱后继关系。只不过它是一种特殊的线性表而已。
它的特殊之处在于限制了线性表的插入和删除位置，它始终在栈顶进行，
这就使得栈底是固定的，最先入栈的元素最后才能出栈。那么，
我们根据栈的定义完全可以选用线性表进行模拟。我们知道线性表的实现由两种方式，
即线性表顺序存储（顺序表）和线性表链式存储（链表）。
在这里只能选用线性表的链式存储实现方式来模拟栈的链式存储，
只不过我们只能选择头插法插入数据（相当于最最先入栈的元素排在栈底，以此类推）
为什么选择头插法插入数据呢？或者这样有什么好处呢？假设我们选择尾插法入栈，
当每次出栈的时候，我们会需要遍历整个链栈，浪费时间。如果我们采用头插法入栈，
那么每次出栈的时候直接弹出头部结点即可，而不用遍历。
这就是为什么我们选用链表头插法来模拟入栈的原因。
当要弹出数据（出栈）是时，我们只需在链表头部弹出结点即可
（相当于最后入栈的元素最先出栈）。我们按照栈的定义通过限制链表的插入操作和
删除操作模拟了一个链栈。
*/